name: CI

on: [push]

jobs:
  Macos:
    strategy:
      fail-fast: false
      matrix:
        target:
          - native_dyn
          - iOS_arm64
          - iOS_i386
          - iOS_x86_64
          - iOS_armv7
    runs-on: macos-10.15
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
      - name: Install packages
        run: |
          brew update
          brew install gcovr pkg-config ninja || brew link --overwrite python@3.9
      - name: Install python modules
        run: pip3 install meson==0.52.1 pytest
      - name: Install deps
        shell: bash
        run: |
          ARCHIVE_NAME=deps2_osx_${{matrix.target}}_libzim.tar.xz
          wget -O- http://tmp.kiwix.org/ci/${ARCHIVE_NAME} | tar -xJ -C $HOME
      - name: Compile
        shell: bash
        run: |
          MESON_OPTION="--default-library=shared"
          MESON_CROSSFILE="$HOME/BUILD_${{matrix.target}}/meson_cross_file.txt"
          if [[ ! "${{matrix.target}}" =~ native_.* ]]; then
            MESON_OPTION="$MESON_OPTION -Db_bitcode=true --cross-file $MESON_CROSSFILE -Dstatic-linkage=true"
            cat $MESON_CROSSFILE
          fi
          export PKG_CONFIG_PATH=$HOME/BUILD_${{matrix.target}}/INSTALL/lib/pkgconfig
          meson . build ${MESON_OPTION}
          cd build
          ninja
      - name: Test
        if: startsWith(matrix.target, 'native_')
        shell: bash
        run: |
          export LD_LIBRARY_PATH=$HOME/BUILD_${{matrix.target}}/INSTALL/lib:$HOME/BUILD_${{matrix.target}}/INSTALL/lib64
          cd build
          ninja download_test_data
          meson test --verbose
        env:
          SKIP_BIG_MEMORY_TEST: 1

  Windows:
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install packages
        run:
          choco install ninja
      - name: Install python modules
        run: pip3 install meson
      - name: Compile
        shell: cmd
        run: .github\script\build_libzim.cmd
      - name: Test
        shell: cmd
        run: |
          cd build
          ninja download_test_data
          meson test --verbose

  Linux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - native_static
          - native_dyn
          - android_arm
          - android_arm64
          - win32_static
          - win32_dyn
        with_xapian:
          - true
          - false
        include:
          - target: native_static
            image_variant: xenial
            lib_postfix: '/x86_64-linux-gnu'
          - target: native_dyn
            image_variant: xenial
            lib_postfix: '/x86_64-linux-gnu'
          - target: android_arm
            image_variant: xenial
            lib_postfix: '/x86_64-linux-gnu'
          - target: android_arm64
            image_variant: xenial
            lib_postfix: '/x86_64-linux-gnu'
          - target: win32_static
            image_variant: f31
            lib_postfix: '64'
          - target: win32_dyn
            image_variant: f31
            lib_postfix: '64'
    env:
      HOME: /home/runner
    runs-on: ubuntu-latest
    container:
      image: "kiwix/kiwix-build_ci:${{matrix.image_variant}}-31"
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Checkout code
      shell: python
      run: |
        from subprocess import check_call
        from os import environ
        config_command = [
          'git', 'config', '--global',
          'http.postBuffer', '1048576000'
        ]
        check_call(config_command, cwd=environ['HOME'])
        clone_command = [
          'git', 'clone',
          'https://github.com/${{github.repository}}',
          '--depth=1',
          '--branch', '${{steps.extract_branch.outputs.branch}}'
        ]
        check_call(clone_command, cwd=environ['HOME'])
    - name: Install deps
      shell: bash
      run: |
        ARCHIVE_NAME=deps2_${OS_NAME}_${{matrix.target}}_libzim.tar.xz
        wget -O- http://tmp.kiwix.org/ci/${ARCHIVE_NAME} | tar -xJ -C /home/runner
    - name: Compile
      shell: bash
      run: |
        if [[ "${{matrix.target}}" =~ .*_dyn ]]; then
          MESON_OPTION="--default-library=shared"
        else
          MESON_OPTION="--default-library=static"
        fi
        if [[ "${{matrix.target}}" =~ native_.* ]]; then
          MESON_OPTION="$MESON_OPTION -Db_coverage=true"
        else
          MESON_OPTION="$MESON_OPTION --cross-file $HOME/BUILD_${{matrix.target}}/meson_cross_file.txt"
        fi
        if [[ "${{matrix.target}}" =~ android_.* ]]; then
          MESON_OPTION="$MESON_OPTION -Dandroid=true"
        fi
        cd $HOME/libzim
        meson . build ${MESON_OPTION} -Dwith_xapian=${{matrix.with_xapian}}
        cd build
        ninja
      env:
        PKG_CONFIG_PATH: "/home/runner/BUILD_${{matrix.target}}/INSTALL/lib/pkgconfig:/home/runner/BUILD_${{matrix.target}}/INSTALL/lib${{matrix.lib_postfix}}/pkgconfig"
    - name: Test
      if: startsWith(matrix.target, 'native_')
      shell: bash
      run: |
        cd $HOME/libzim/build
        ninja download_test_data
        meson test --verbose
        ninja coverage
      env:
        LD_LIBRARY_PATH: "/home/runner/BUILD_${{matrix.target}}/INSTALL/lib:/home/runner/BUILD_${{matrix.target}}/INSTALL/lib${{matrix.lib_postfix}}"
        SKIP_BIG_MEMORY_TEST: 1
    - name: Publish coverage
      shell: bash
      run: |
        cd $HOME/libzim
        curl https://codecov.io/bash -o codecov.sh
        bash codecov.sh -n "${OS_NAME}_${{matrix.target}}" -Z
        rm codecov.sh
      if: startsWith(matrix.target, 'native_')
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
